import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as n}from"./app-HsmeU9kI.js";const l={};function r(o,e){return n(),a("div",null,e[0]||(e[0]=[i('<h1 id="java场景题" tabindex="-1"><a class="header-anchor" href="#java场景题"><span>Java场景题</span></a></h1><h2 id="mysql分布式主键" tabindex="-1"><a class="header-anchor" href="#mysql分布式主键"><span>MySQL分布式主键</span></a></h2><ul><li>为什么不推荐自增式主键</li><li>为什么不使用UUID</li><li>雪花算法</li></ul><h2 id="如何保证消息只被消费一次" tabindex="-1"><a class="header-anchor" href="#如何保证消息只被消费一次"><span>如何保证消息只被消费一次</span></a></h2><ul><li>如何保证消息至少发送成功</li><li>如何保证消息多次消费跟单次消费一致（使用一个状态记录表）</li></ul><h2 id="高并发系统" tabindex="-1"><a class="header-anchor" href="#高并发系统"><span>高并发系统</span></a></h2><ul><li>模块拆分</li><li>缓存加速</li><li>MQ削峰</li><li>数据库分离</li><li>读写分离</li><li>服务监控</li></ul><h2 id="生成短url" tabindex="-1"><a class="header-anchor" href="#生成短url"><span>生成短URL</span></a></h2><p>使用短URL生成器</p>',9)]))}const c=t(l,[["render",r]]),h=JSON.parse('{"path":"/posts/interview/%E5%9C%BA%E6%99%AF%E9%A2%98.html","title":"Java场景题","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-09-28T00:00:00.000Z","category":["Java","场景题"],"tag":["Java场景题"],"description":"Java场景题 MySQL分布式主键 为什么不推荐自增式主键 为什么不使用UUID 雪花算法 如何保证消息只被消费一次 如何保证消息至少发送成功 如何保证消息多次消费跟单次消费一致（使用一个状态记录表） 高并发系统 模块拆分 缓存加速 MQ削峰 数据库分离 读写分离 服务监控 生成短URL 使用短URL生成器","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java场景题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-09-28T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-11T06:27:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jing104\\",\\"url\\":\\"https://jing104.blog\\"}]}"],["meta",{"property":"og:url","content":"https://jing104.blog/posts/interview/%E5%9C%BA%E6%99%AF%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Jing104-Note"}],["meta",{"property":"og:title","content":"Java场景题"}],["meta",{"property":"og:description","content":"Java场景题 MySQL分布式主键 为什么不推荐自增式主键 为什么不使用UUID 雪花算法 如何保证消息只被消费一次 如何保证消息至少发送成功 如何保证消息多次消费跟单次消费一致（使用一个状态记录表） 高并发系统 模块拆分 缓存加速 MQ削峰 数据库分离 读写分离 服务监控 生成短URL 使用短URL生成器"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-11T06:27:42.000Z"}],["meta",{"property":"article:tag","content":"Java场景题"}],["meta",{"property":"article:published_time","content":"2025-09-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-11T06:27:42.000Z"}]]},"git":{"createdTime":1760164062000,"updatedTime":1760164062000,"contributors":[{"name":"Jing104","username":"Jing104","email":"2046485376@qq.com","commits":1,"url":"https://github.com/Jing104"}]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"posts/interview/场景题.md","excerpt":"\\n<h2>MySQL分布式主键</h2>\\n<ul>\\n<li>为什么不推荐自增式主键</li>\\n<li>为什么不使用UUID</li>\\n<li>雪花算法</li>\\n</ul>\\n<h2>如何保证消息只被消费一次</h2>\\n<ul>\\n<li>如何保证消息至少发送成功</li>\\n<li>如何保证消息多次消费跟单次消费一致（使用一个状态记录表）</li>\\n</ul>\\n<h2>高并发系统</h2>\\n<ul>\\n<li>模块拆分</li>\\n<li>缓存加速</li>\\n<li>MQ削峰</li>\\n<li>数据库分离</li>\\n<li>读写分离</li>\\n<li>服务监控</li>\\n</ul>\\n<h2>生成短URL</h2>","autoDesc":true}');export{c as comp,h as data};
